import {<%= repositoryTypeClass %>, juggler} from '@loopback/repository';
import {<%= modelName %>} from '../models';
import {<%= dataSourceClassName %>} from '../datasources';
import {inject} from '@loopback/core';
import {GridFSBucket, ObjectId, Db} from 'mongodb';

export class <%= className %>Repository extends <%= repositoryTypeClass %><
  <%= modelName %>,
  typeof <%= modelName %>.prototype.<%= idProperty %>
> {
  constructor(
    @inject('datasources.<%= dataSourceName %>') dataSource: <%= dataSourceClassName %>,
  ) {
    super(<%= modelName %>, dataSource);
  }

  <%_ if( downloadApi ) {%>

  async downloadById(id: string){
    await this.dataSource.connect();
    let connector: any = this.dataSource.connector;
    let db: Db = connector.db;
    let bucket = new GridFSBucket(db, {
      chunkSizeBytes: 255*1024,
      bucketName: '<%= bucketName || 'fs' %>'
    });
    return await bucket.openDownloadStream(new ObjectId(id));
  }
  <%_ } %>

}

